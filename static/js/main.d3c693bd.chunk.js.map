{"version":3,"sources":["components/Todo.js","components/Title.js","components/ShortCut.js","components/MainPage.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","todoValue","setTodoValue","useState","todoList","setTodoList","storedTodoList","window","localStorage","getItem","JSON","parse","useEffect","setItem","stringify","React","createElement","id","onSubmit","event","preventDefault","currentArray","placeholder","onChange","target","value","map","item","index","key","onClick","slice","DeleteTodo","Title","currentTime","setCurrentTime","Date","name","setName","isInputVisible","setInputVisible","storedName","expirationTime","now","timerId","setInterval","clearInterval","saveName","newName","getTime","addLeadingZero","num","toString","padStart","formattedTime","concat","getHours","getMinutes","getSeconds","formattedDate","getFullYear","getMonth","getDate","className","type","onKeyPress","autoFocus","handleUsernameClick","ShortCut","shortCutLink","setShortCutLink","storedLinks","setStoredLinks","linkTitles","setLinkTitles","inputRef","useRef","linksFromStorage","linkTitlesFromStorage","link","handleLinkClick","url","current","open","e","onEdit","newTitle","updatedLinkTitles","ref","updatedLinks","splice","onDelete","trim","MainPage","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d3c693bd.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Todo.css\";\n\nfunction Todo() {\n    const [todoValue, setTodoValue] = useState(\"\");\n    const ifUserTypeTodo = (event) => {\n        setTodoValue(event.target.value);\n    };\n\n    const [todoList, setTodoList] = useState(() => {\n        const storedTodoList = window.localStorage.getItem(\"todoList\");\n        return storedTodoList ? JSON.parse(storedTodoList) : [];\n    });\n\n    useEffect(() => {\n        window.localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n    }, [todoList]);\n\n    const ifUserSubmitTodo = (event) => {\n        event.preventDefault();\n        if (todoValue === \"\") {\n            return null;\n        } else {\n            setTodoList((currentArray) => [todoValue, ...currentArray]);\n            setTodoValue(\"\");\n        }\n    };\n\n    const DeleteTodo = (index) => {\n        setTodoList((currentArray) => [\n            ...currentArray.slice(0, index),\n            ...currentArray.slice(index + 1),\n        ]);\n    };\n\n    return (\n        <div id=\"Todo\">\n            <form id=\"todoForm\" onSubmit={ifUserSubmitTodo}>\n                <input\n                    id=\"todoInput\"\n                    placeholder=\"Input Todo!\"\n                    onChange={ifUserTypeTodo}\n                    value={todoValue}\n                ></input>\n            </form>\n            <ul id=\"todoUl\">\n                {todoList.map((item, index) => (\n                    <li\n                        id=\"todoLi\"\n                        key={index}\n                        onClick={() => DeleteTodo(index)}\n                    >\n                        {item}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default Todo;\n","import React, { useEffect, useState } from \"react\";\nimport \"./Title.css\";\n\nfunction Title() {\n    const [currentTime, setCurrentTime] = useState(new Date());\n    const [name, setName] = useState(\"\");\n    const [isInputVisible, setInputVisible] = useState(true);\n\n    useEffect(() => {\n        const storedName = localStorage.getItem(\"name\");\n        const expirationTime = localStorage.getItem(\"expirationTime\");\n        const now = new Date();\n\n        if (storedName && expirationTime && new Date(expirationTime) > now) {\n            setName(storedName);\n            setInputVisible(false);\n        }\n\n        const timerId = setInterval(() => {\n            setCurrentTime(new Date());\n        }, 1000);\n\n        return () => {\n            clearInterval(timerId);\n        };\n    }, []);\n\n    const handleEnterKeyPress = (event) => {\n        if (event.key === \"Enter\") {\n            event.preventDefault();\n            saveName(name);\n            setInputVisible(false);\n        }\n    };\n\n    const handleInputChange = (event) => {\n        setName(event.target.value);\n    };\n\n    const saveName = (newName) => {\n        const now = new Date();\n        const expirationTime = new Date(now.getTime() + 24 * 60 * 60 * 1000);\n        localStorage.setItem(\"name\", newName);\n        localStorage.setItem(\"expirationTime\", expirationTime);\n        setName(newName);\n    };\n\n    const handleUsernameClick = () => {\n        setInputVisible(true);\n    };\n\n    const addLeadingZero = (num) => num.toString().padStart(2, \"0\");\n\n    const formattedTime = `${addLeadingZero(\n        currentTime.getHours()\n    )}:${addLeadingZero(currentTime.getMinutes())}:${addLeadingZero(\n        currentTime.getSeconds()\n    )}`;\n\n    const formattedDate = `${currentTime.getFullYear()}.${addLeadingZero(\n        currentTime.getMonth() + 1\n    )}.${addLeadingZero(currentTime.getDate())}`;\n\n    return (\n        <div>\n            <div className=\"titleContainer\">\n                {isInputVisible ? (\n                    <input\n                        id=\"nameInput\"\n                        type=\"text\"\n                        placeholder=\"Type Your Name!\"\n                        value={name}\n                        onChange={handleInputChange}\n                        onKeyPress={handleEnterKeyPress}\n                        autoFocus\n                    />\n                ) : (\n                    <h1 id=\"Title\" onClick={handleUsernameClick}>\n                        WELCOME! {name}\n                    </h1>\n                )}\n                <h1 id=\"time\">{formattedTime}</h1>\n                <h2 id=\"date\">{formattedDate}</h2>\n            </div>\n        </div>\n    );\n}\n\nexport default Title;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport \"./ShortCut.css\";\n\nfunction ShortCut() {\n    const [shortCutLink, setShortCutLink] = useState(\"\");\n    const [storedLinks, setStoredLinks] = useState([]);\n    const [linkTitles, setLinkTitles] = useState([]);\n    const inputRef = useRef(null);\n\n    const onChange = (event) => {\n        setShortCutLink(event.target.value);\n    };\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        if (shortCutLink.trim() === \"\") {\n            return null;\n        } else {\n            let updatedLinks = [...storedLinks, shortCutLink];\n            localStorage.setItem(\"shortCutLinks\", JSON.stringify(updatedLinks));\n            setStoredLinks(updatedLinks);\n            setShortCutLink(\"\");\n        }\n    };\n\n    const onDelete = (index) => {\n        const updatedLinks = [...storedLinks];\n        updatedLinks.splice(index, 1);\n        localStorage.setItem(\"shortCutLinks\", JSON.stringify(updatedLinks));\n        setStoredLinks(updatedLinks);\n    };\n\n    const onEdit = (index, newTitle) => {\n        const updatedLinkTitles = [...linkTitles];\n        updatedLinkTitles[index] = newTitle;\n        setLinkTitles(updatedLinkTitles);\n        localStorage.setItem(\"linkTitles\", JSON.stringify(updatedLinkTitles));\n    };\n\n    useEffect(() => {\n        const linksFromStorage = JSON.parse(\n            localStorage.getItem(\"shortCutLinks\")\n        );\n        if (linksFromStorage) {\n            setStoredLinks(linksFromStorage);\n        }\n    }, [storedLinks]);\n\n    useEffect(() => {\n        const linkTitlesFromStorage = JSON.parse(\n            localStorage.getItem(\"linkTitles\")\n        );\n        if (linkTitlesFromStorage) {\n            setLinkTitles(linkTitlesFromStorage);\n        }\n    }, [linkTitles]);\n\n    const handleLinkClick = (event, url) => {\n        if (event.target !== inputRef.current) {\n            window.open(url, \"_blank\");\n        }\n    };\n\n    return (\n        <div id=\"shortCutContainer\">\n            <div id=\"shortCutListContainer\">\n                {storedLinks.map((link, index) => (\n                    <div\n                        key={index}\n                        id=\"shortCutList\"\n                        onClick={(event) => handleLinkClick(event, link)}\n                    >\n                        <input\n                            id=\"editInput\"\n                            type=\"text\"\n                            value={linkTitles[index]}\n                            onChange={(e) => onEdit(index, e.target.value)}\n                            ref={inputRef}\n                        />\n                        <button onClick={() => onDelete(index)}>\n                            <b>Delete</b>\n                        </button>\n                    </div>\n                ))}\n                <form onSubmit={onSubmit}>\n                    <input\n                        placeholder=\"New Bookmark!\"\n                        value={shortCutLink}\n                        onChange={onChange}\n                        id=\"shortCutInput\"\n                    />\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default ShortCut;\n","import React from \"react\";\n\nimport Todo from \"./Todo\";\nimport Title from \"./Title\";\nimport ShortCut from \"./ShortCut\";\n\nimport \"./MainPage.css\";\n\nfunction MainPage() {\n  return (\n    <div>\n      <Title />\n      <div id=\"container\">\n        <ShortCut />\n        <Todo />\n      </div>\n    </div>\n  );\n}\n\nexport default MainPage;\n","import \"./App.css\";\nimport MainPage from \"./components/MainPage\";\nimport React from \"react\";\n\nfunction App() {\n  return (\n    <div>\n      <MainPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}